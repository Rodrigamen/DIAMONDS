# -*- coding: utf-8 -*-
"""Funciones Modelo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-g3eq0WeH5AUiHvsqRLCTZOq6M91uQzu
"""

def metricas(y_test, y_train, y_test_pred, y_train_pred, tipo_modelo):
    
    
    resultados = {'MAE': [metrics.mean_absolute_error(y_test, y_test_pred), metrics.mean_absolute_error(y_train, y_train_pred)],
                'MSE': [metrics.mean_squared_error(y_test, y_test_pred), metrics.mean_squared_error(y_train, y_train_pred)],
                'RMSE': [np.sqrt(metrics.mean_squared_error(y_test, y_test_pred)), np.sqrt(metrics.mean_squared_error(y_train, y_train_pred))],
                'R2':  [metrics.r2_score(y_test, y_test_pred), metrics.r2_score(y_train, y_train_pred)],
                 "set": ["test", "train"]}
    df = pd.DataFrame(resultados)
    df["modelo"] = tipo_modelo
    return df

"""Muestra las métricas principales para el modelo.

A la función se le pasan las variables respuesta de train y de test, tanto las originales como las que hemos precedido con el modelo junto con el tipo de modelo que estamos usando y la función nos devuelve las principales métricas para evaluar la calidad y ajuste del modelo que hemos creado.
"""

def save_scaler(amount, filename = "scaler.pkl"):
    with open(filename, "wb") as f:
        pickle.dump(amount, f)
save_scaler(gb, filename="gb3.pkl")

"""La función, simplemente, guarda nuestro escalar creado para poder aplicar el modelo generado sobre el archivo de test."""